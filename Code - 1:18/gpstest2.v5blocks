{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"U`9aA+=)r+L1tzA.)-qi\">myVariable</variable><variable id=\"n13++.qa%7#F0vB/{Lc;\">referenceAngle</variable></variables><comment id=\"C6%-FVGUtrl3I36F+_Qj\" x=\"1897\" y=\"1598\" h=\"400\" w=\"568\">Project:\nDrive to Location (Known Starting Position)\n\nDescription:\nThis example will show how to use a GPS Sensor to navigate a V5 Moby Hero Bot to the center of a field by driving along the X-axis then the Y-axis.\n\nStarting Position:\nBottom Right Corner - Facing West\n\nConfiguration:\nV5 Hero Bot (Drivetrain 2-motor, Inertial)\nMotor Group on Port 2 and 9\nRotation on Port 4\nGPS on Port 8\nDistance on Port 12\nOptical on Port 19\nDistance on Port 20\nBumper on 3-Wire Port A</comment><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"1250\" y=\"1610\"><next><block type=\"v5_sensing_gps_calibrate\" id=\"dKHk}9_4[ybW;D4KBsd1\"><field name=\"GPS\">GPS6</field><next><block type=\"v5_other_comment\" id=\"x=%fTm?_VT:,Y(1+BX3C\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"u]hGyNO161z+afZ;MAM$\"><field name=\"comment\">Set the approximate starting position of the robot</field></shadow></value><next><block type=\"v5_other_comment\" id=\"!BE5wx,X[n1=JJNTEj8w\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"CD5i4lrErJfIPB!*BAQZ\"><field name=\"comment\">This helps the GPS sensor know its starting position</field></shadow></value><next><block type=\"v5_other_comment\" id=\"cc$vzni4mYr1jF=uK}$F\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"ojj_peUYN??]{c!P_PO*\"><field name=\"comment\">if it is too close to the field walls to get an accurate initial reading</field></shadow></value><next><block type=\"v5_sensing_gps_set_location\" id=\"#AzvM@E`R*H;*tom?}St\"><field name=\"GPS\">GPS6</field><field name=\"UNITS\">in</field><value name=\"X\"><shadow type=\"math_number\" id=\"*-p^`ogjAKPTi*K+z.RV\"><field name=\"NUM\">56</field></shadow></value><value name=\"Y\"><shadow type=\"math_number\" id=\"hX^nTUIEBu5j)Z#.*kwY\"><field name=\"NUM\">-45</field></shadow></value><value name=\"DEGREES\"><shadow type=\"math_number\" id=\"49HK}mSO]=BN1f^pmL;w\"><field name=\"NUM\">270</field></shadow></value><next><block type=\"v5_other_comment\" id=\"J3{f#GuYwyn{IN$9fO[3\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"jU5Ldm!x`[cGMmD=4(a5\"><field name=\"comment\">Print the starting position of the robot</field></shadow></value><next><block type=\"procedures_call\" id=\"AMwm(J@wJi|dCOr@u99X\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"printPosition\" proceduredefid=\"Y(MGI+fxesT(n2I@%%Pl\" argumentids=\"[]\" warp=\"false\"></mutation><next><block type=\"v5_drivetrain_drive\" id=\"Qk0pji)emxAD5Re2xn*D\"><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_control_wait_until\" id=\"Yw*=)i-YF,J?Dz6j;h$d\"><value name=\"CONDITION\"><block type=\"v5_operator_less_than\" id=\"%SY2*mIh$KThspmhn$u$\"><value name=\"OPERAND1\"><shadow xmlns=\"http://www.w3.org/1999/xhtml\" type=\"math_number\" id=\"R4TP1$]6B*NPJUO|O*@G\"><field name=\"NUM\"></field></shadow><block type=\"v5_sensing_gps_position\" id=\"Y^HkWzHLNkU-r0s^`Idr\"><field name=\"GPS\">GPS6</field><field name=\"POSITION\">X</field><field name=\"UNITS\">mm</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"z^`uQ7{s]@0.3?,6T1/Y\"><field name=\"NUM\">0</field></shadow></value></block></value><next><block type=\"v5_motion_stop_driving\" id=\"DpLea)F.PzQNE%vs.Y%F\"><next><block type=\"v5_drivetrain_turn_to_heading\" id=\"s4D^KU,~t6-1IO@,{Tcx\"><field name=\"anddontwait_mutator\">false</field><value name=\"HEADING\"><shadow type=\"math_number\" id=\"~FS)Yf(0]f!#?gve{mf)\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_drivetrain_drive\" id=\"qR[G.KoP+HTbCzsy_LLS\"><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_control_wait_until\" id=\"+O4mH1x@c/IsQ2gZMOND\"><value name=\"CONDITION\"><block type=\"v5_operator_greater_than\" id=\"u%yaMFraB8E,?%I-6{ml\"><value name=\"OPERAND1\"><shadow xmlns=\"http://www.w3.org/1999/xhtml\" type=\"math_number\" id=\"KK2?Mijvb3:exr_^^].v\"><field name=\"NUM\"></field></shadow><block type=\"v5_sensing_gps_position\" id=\"s]12+9`h/cH+AZ2K74ox\"><field name=\"GPS\">GPS6</field><field name=\"POSITION\">Y</field><field name=\"UNITS\">mm</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"1@T5u:atqxJ_*S6jLvMT\"><field name=\"NUM\">0</field></shadow></value></block></value><next><block type=\"v5_motion_stop_driving\" id=\"YY../)*6n~W)7W[6?dE*\"><next><block type=\"v5_other_comment\" id=\"Q{4OW+O=~)EKds8^9Q8^\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"rDrSvIL=3+^n`%UR3lfR\"><field name=\"comment\">Print the ending position of the robot</field></shadow></value><next><block type=\"procedures_call\" id=\"/.^(iUlA-_`Y}J1?`mUl\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"printPosition\" proceduredefid=\"Y(MGI+fxesT(n2I@%%Pl\" argumentids=\"[]\" warp=\"false\"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"procedures_definition\" id=\"leIdq6AX1ARWT3u^q9O2\" x=\"1830\" y=\"2090\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"Y(MGI+fxesT(n2I@%%Pl\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"printPosition\" proceduredefid=\"Y(MGI+fxesT(n2I@%%Pl\" argumentids=\"[]\" argumentnames=\"[]\" argumentdefaults=\"[]\" argumenttypes=\"[]\" warp=\"false\"></mutation></shadow></statement><next><block type=\"v5_other_comment\" id=\"G=8j2Ie+]laj_(.oFLGk\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"nmEmf#DBh*mU)6?1Z!P*\"><field name=\"comment\">This MyBlock will print GPS position values to the V5 Brain</field></shadow></value><next><block type=\"v5_looks_print\" id=\"PXRzVpWeE%?BhOG:9~ws\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"gED}avk@zDI8f2-vY[=;\"><field name=\"TEXT\">X:</field></shadow></value><next><block type=\"v5_looks_print\" id=\"t^5myFoA_mVYRJa(P[8b\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow xmlns=\"http://www.w3.org/1999/xhtml\" type=\"text\" id=\"RaJs,@Q79}]?}v$?8vhn\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_sensing_gps_position\" id=\":+Sab3@dOSRP]jVLthZ%\"><field name=\"GPS\">GPS6</field><field name=\"POSITION\">X</field><field name=\"UNITS\">mm</field></block></value><next><block type=\"v5_looks_print\" id=\"2455n4BDEl.q!1pZMHKo\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"T*xyava|2Z9m/h(Q_vkK\"><field name=\"TEXT\">Y:</field></shadow></value><next><block type=\"v5_looks_print\" id=\"Eig!/dp_/tw9J+.nSO*E\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow xmlns=\"http://www.w3.org/1999/xhtml\" type=\"text\" id=\"%]$$T^2P2.BA?F_Gl(B8\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_sensing_gps_position\" id=\"bK%A(-bUeXqBe2dpkX.#\"><field name=\"GPS\">GPS6</field><field name=\"POSITION\">Y</field><field name=\"UNITS\">mm</field></block></value></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[6],"name":"GPS6","customName":false,"deviceType":"GPS","deviceClass":"gps","setting":{"xOffset":"0","xOffsetUnit":"mm","yOffset":"-200","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":22},{"port":[1,3,2,4,7],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"inertial","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"}}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ngps GPS6 = gps(PORT6, 0.00, -200.00, mm, 180);\nmotor leftMotorA = motor(PORT1, ratio18_1, false);\nmotor leftMotorB = motor(PORT3, ratio18_1, false);\nmotor_group LeftDriveSmart = motor_group(leftMotorA, leftMotorB);\nmotor rightMotorA = motor(PORT2, ratio18_1, true);\nmotor rightMotorB = motor(PORT4, ratio18_1, true);\nmotor_group RightDriveSmart = motor_group(rightMotorA, rightMotorB);\ninertial DrivetrainInertial = inertial(PORT7);\nsmartdrive Drivetrain = smartdrive(LeftDriveSmart, RightDriveSmart, DrivetrainInertial, 319.19, 320, 40, mm, 1);\n\n\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Inertial\");\n  DrivetrainInertial.calibrate();\n  while (DrivetrainInertial.isCalibrating()) {\n    wait(25, msec);\n  }\n\n  // Clears the screen and returns the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// Generated code.\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\n// User defined function\nvoid myblockfunction_printPosition();\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat myVariable, referenceAngle;\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// User defined function\nvoid myblockfunction_printPosition() {\n  // This MyBlock will print GPS position values to the V5 Brain\n  Brain.Screen.print(\"X:\");\n  Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(GPS6.xPosition(mm)));\n  Brain.Screen.print(\"Y:\");\n  Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(GPS6.yPosition(mm)));\n  Brain.Screen.newLine();\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  GPS6.calibrate();\n  while (GPS6.isCalibrating()) { task::sleep(50); }\n  // Set the approximate starting position of the robot\n  // This helps the GPS sensor know its starting position\n  // if it is too close to the field walls to get an accurate initial reading\n  GPS6.setLocation(56.0, -45.0, inches, 270.0, degrees);\n  // Print the starting position of the robot\n  myblockfunction_printPosition();\n  Drivetrain.drive(forward);\n  waitUntil((GPS6.xPosition(mm) < 0.0));\n  Drivetrain.stop();\n  Drivetrain.turnToHeading(90.0, degrees, true);\n  Drivetrain.drive(forward);\n  waitUntil((GPS6.yPosition(mm) > 0.0));\n  Drivetrain.stop();\n  // Print the ending position of the robot\n  myblockfunction_printPosition();\n  return 0;\n}\n\n\nint main() {\n  // Calibrate the Drivetrain\n  calibrateDrivetrain();\n\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}